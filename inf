<!DOCTYPE html>
<html lang="el">
<head>
  <meta charset="UTF-8">
  <title>Infinity Multiplier with Speed</title>
  <style>
    body {
      font-family: monospace;
      background-color: #000;
      color: #0f0;
      text-align: center;
      padding-top: 100px;
    }
    #number {
      font-size: 60px;
      margin-bottom: 20px;
    }
    #status {
      font-size: 20px;
      color: #0ff;
      margin: 10px 0;
    }
    input {
      font-size: 18px;
      padding: 5px;
      width: 180px;
      margin: 5px;
      text-align: center;
    }
    button {
      font-size: 20px;
      margin: 10px;
      padding: 15px 30px;
      background-color: #0f0;
      color: #000;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: 0.2s;
    }
    button:hover {
      background-color: #0c0;
    }
  </style>
</head>
<body>

  <div id="number">1</div>

  <button onclick="multiply()">×2</button>
  <button onclick="divide()">÷2</button>
  <button onclick="reset()">Reset</button>
  <button onclick="save()">💾 Save</button>
  <button onclick="load()">📂 Load</button>
  <br>
  <input id="fpsInput" type="number" min="1" max="1000000" step="1" value="1000">
  πολλαπλασιασμοί / δευτερόλεπτο
  <button onclick="toggleAuto()">⏱ Auto ×2</button>

  <div id="status">Auto OFF</div>

  <script>
    let current = 1;
    let autoRunning = false;
    let lastTime = 0;
    let intervalMs = 1;

    function formatNumber(num) {
      if (num < 1e3) return num;
      if (num < 1e6) return (num / 1e3).toFixed(2) + " thousand";
      if (num < 1e9) return (num / 1e6).toFixed(2) + " million";
      if (num < 1e12) return (num / 1e9).toFixed(2) + " billion";
      if (num < 1e15) return (num / 1e12).toFixed(2) + " trillion";
      if (num < 1e18) return (num / 1e15).toFixed(2) + " quadrillion";
      if (num < 1e21) return (num / 1e18).toFixed(2) + " quintillion";
      return num.toExponential(3);
    }

    function updateDisplay() {
      document.getElementById("number").innerText = formatNumber(current);
    }

    function multiply() {
      current *= 2;
      updateDisplay();
    }

    function divide() {
      current /= 2;
      updateDisplay();
    }

    function reset() {
      current = 1;
      updateDisplay();
    }

    function save() {
      localStorage.setItem("savedValue", current);
      alert("Αποθηκεύτηκε!");
    }

    function load() {
      const saved = localStorage.getItem("savedValue");
      if (saved !== null) {
        current = parseFloat(saved);
        updateDisplay();
        alert("Φορτώθηκε!");
      } else {
        alert("Δεν υπάρχει αποθηκευμένη τιμή.");
      }
    }

    function autoLoop(time) {
      if (!autoRunning) return;
      if (time - lastTime >= intervalMs) {
        multiply();
        lastTime = time;
      }
      requestAnimationFrame(autoLoop);
    }

    function toggleAuto() {
      const status = document.getElementById("status");
      const fpsInput = document.getElementById("fpsInput");
      let fps = parseFloat(fpsInput.value);

      if (isNaN(fps) || fps < 1) {
        alert("Εισάγετε αριθμό ≥ 1");
        return;
      }

      intervalMs = 1000 / fps;

      if (!autoRunning) {
        autoRunning = true;
        lastTime = performance.now();
        requestAnimationFrame(autoLoop);
        status.innerText = `Auto ON: ${fps}x ανά δευτερόλεπτο`;
      } else {
        autoRunning = false;
        status.innerText = "Auto OFF";
      }
    }

    window.onload = load;
  </script>

</body>
</html>
